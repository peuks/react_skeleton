import { AnimateSharedLayout, motion } from "framer-motion";
import styled from "styled-components";
import Story from "components/Story/Story";
import Pagination from "components/layout/navigation/Pagination/Pagination";
import usePagination from "hooks/usePagination";
import useFetchData from "hooks/useFetchData";
import useCount from "hooks/useCount";

const Stories = () => {
  const { storiesIds } = useFetchData();

  const { count, setCount } = useCount(3);
  const { currentPage, currentData, next, prev, index, goTO } = usePagination(
    storiesIds,
    count
  );
  const filteredData = currentData();
  const incrementCount = () => {
    setCount(count + 1);
  };
  let delay2 = 0.3;

  return (
    <>
      <Pagination
        next={next}
        prev={prev}
        currentPage={currentPage}
        maxPages={5}
        itemsPerPage={count}
        index={index}
        goTO={goTO}
      />
      <Grid>
        <AnimateSharedLayout type="crossfade">
          {filteredData.length &&
            filteredData.map((id) => {
              delay2 += 0.05;

              return <Story storyId={id} key={id} delay={delay2} />;
            })}
        </AnimateSharedLayout>
      </Grid>
      <Button onClick={incrementCount}>Load More</Button>
    </>
  );
};

const Button = styled(motion.button)`
  border-radius: 1.5625rem 1.5625rem;
  align-self: stretch;

  box-shadow: var(--shadow);

  padding: 0.5rem 2rem;
  cursor: pointer;
  background: var(--clr-6);
  color: white;
  border: none;
  height: 2.5rem;
  max-width: 10rem;
  &:hover {
    animation: heartbeat 2s ease-in-out infinite both;
  }
  /* ----------------------------------------------
 * Generated by Animista on 2021-10-30 21:38:29
 * Licensed under FreeBSD License.
 * See http://animista.net/license for more info. 
 * w: http://animista.net, t: @cssanimista
 * ---------------------------------------------- */

  @-webkit-keyframes heartbeat {
    from {
      -webkit-transform: scale(1);
      transform: scale(1);
      -webkit-transform-origin: center center;
      transform-origin: center center;
      -webkit-animation-timing-function: ease-out;
      animation-timing-function: ease-out;
    }
    10% {
      -webkit-transform: scale(0.91);
      transform: scale(0.91);
      -webkit-animation-timing-function: ease-in;
      animation-timing-function: ease-in;
    }
    17% {
      -webkit-transform: scale(0.98);
      transform: scale(0.98);
      -webkit-animation-timing-function: ease-out;
      animation-timing-function: ease-out;
    }
    33% {
      -webkit-transform: scale(0.87);
      transform: scale(0.87);
      -webkit-animation-timing-function: ease-in;
      animation-timing-function: ease-in;
    }
    45% {
      -webkit-transform: scale(1);
      transform: scale(1);
      -webkit-animation-timing-function: ease-out;
      animation-timing-function: ease-out;
    }
  }
  @keyframes heartbeat {
    from {
      -webkit-transform: scale(1);
      transform: scale(1);
      -webkit-transform-origin: center center;
      transform-origin: center center;
      -webkit-animation-timing-function: ease-out;
      animation-timing-function: ease-out;
    }
    10% {
      -webkit-transform: scale(0.91);
      transform: scale(0.91);
      -webkit-animation-timing-function: ease-in;
      animation-timing-function: ease-in;
    }
    17% {
      -webkit-transform: scale(0.98);
      transform: scale(0.98);
      -webkit-animation-timing-function: ease-out;
      animation-timing-function: ease-out;
    }
    33% {
      -webkit-transform: scale(0.87);
      transform: scale(0.87);
      -webkit-animation-timing-function: ease-in;
      animation-timing-function: ease-in;
    }
    45% {
      -webkit-transform: scale(1);
      transform: scale(1);
      -webkit-animation-timing-function: ease-out;
      animation-timing-function: ease-out;
    }
  }
`;

const Grid = styled.div`
  display: grid;
  grid-template-columns: repeat(
    auto-fill,
    minmax(clamp(248px, 50vw, 350px), 1fr)
  );
  gap: var(--spacing);
`;

export default Stories;
